-- MySQL Script generated by MySQL Workbench
-- Thu Apr  4 11:47:39 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sensualite
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema sensualite
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sensualite` DEFAULT CHARACTER SET utf8 ;
USE `sensualite` ;

-- -----------------------------------------------------
-- Table `sensualite`.`Compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sensualite`.`Compras` (
  `idCompra` INT  NOT NULL,
  `Tipo_compra` VARCHAR(45) NULL,
  `Usuarios_idUsuario` INT NOT NULL,
  `fecha_compra` DATE NULL,
  PRIMARY KEY (`idCompra`, `Usuarios_idUsuario`),
  INDEX `fk_Compras_Usuarios_idx` (`Usuarios_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_Compras_Usuarios`
    FOREIGN KEY (`Usuarios_idUsuario`)
    REFERENCES `sensualite`.`Usuarios` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sensualite`.`Pagos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sensualite`.`Pagos` (
  `idPago` INT NOT NULL,
  `TipoPago` VARCHAR(45) NULL,
  `Compras_idCompra` INT NOT NULL,
  `Compras_idCompra1` INT NOT NULL,
  `Compras_Usuarios_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idPago`, `Compras_idCompra`, `Compras_idCompra1`, `Compras_Usuarios_idUsuario`),
  INDEX `fk_Pagos_Compras1_idx` (`Compras_idCompra1` ASC, `Compras_Usuarios_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_Pagos_Compras1`
    FOREIGN KEY (`Compras_idCompra1` , `Compras_Usuarios_idUsuario`)
    REFERENCES `sensualite`.`Compras` (`idCompra` , `Usuarios_idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX idx_Pagos_composite 
ON Pagos (idPago, Compras_idCompra, Compras_Usuarios_idUsuario);

-- -----------------------------------------------------
-- Table `sensualite`.`Envios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sensualite`.`Envios` (
  `idEnvio` INT NOT NULL,
  `Pagos_idPago` INT NOT NULL,
  `Pagos_Compras_idCompra` INT NOT NULL,
  `Pagos_Compras_Usuarios_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idEnvio`, `Pagos_idPago`, `Pagos_Compras_idCompra`, `Pagos_Compras_Usuarios_idUsuario`),
  INDEX `fk_Envios_Pagos_idx` (`Pagos_idPago` ASC, `Pagos_Compras_idCompra` ASC, `Pagos_Compras_Usuarios_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_Envios_Pagos`
    FOREIGN KEY (`Pagos_idPago` , `Pagos_Compras_idCompra` , `Pagos_Compras_Usuarios_idUsuario`)
    REFERENCES `sensualite`.`Pagos` (`idPago` , `Compras_idCompra` , `Compras_Usuarios_idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;




-- -----------------------------------------------------
-- Table `sensualite`.`Usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sensualite`.`Usuarios` (
  `idUsuario` INT NOT NULL,
  `nombre` VARCHAR(45) NULL,
  `Apellido` VARCHAR(45) NULL,
  `Edad` VARCHAR(45) NULL,
  `e-mail` VARCHAR(45) NULL,
  `contrase√±a` VARCHAR(45) NULL,
  `domicilio` VARCHAR(45) NULL,
  `tel` INT NULL,
  `Envios_idEnvio` INT NOT NULL,
  `Envios_Pagos_idPago` INT NOT NULL,
  `Envios_Pagos_Compras_idCompra` INT NOT NULL,
  `Envios_Pagos_Compras_Usuarios_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idUsuario`, `Envios_idEnvio`, `Envios_Pagos_idPago`, `Envios_Pagos_Compras_idCompra`, `Envios_Pagos_Compras_Usuarios_idUsuario`),
  UNIQUE INDEX `idUsuario_UNIQUE` (`idUsuario` ASC) VISIBLE,
  INDEX `fk_Usuarios_Envios1_idx` (`Envios_idEnvio` ASC, `Envios_Pagos_idPago` ASC, `Envios_Pagos_Compras_idCompra` ASC, `Envios_Pagos_Compras_Usuarios_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_Usuarios_Envios1`
    FOREIGN KEY (`Envios_idEnvio` , `Envios_Pagos_idPago` , `Envios_Pagos_Compras_idCompra` , `Envios_Pagos_Compras_Usuarios_idUsuario`)
    REFERENCES `sensualite`.`Envios` (`idEnvio` , `Pagos_idPago` , `Pagos_Compras_idCompra` , `Pagos_Compras_Usuarios_idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sensualite`.`Productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sensualite`.`Productos` (
  `id_produto` INT NOT NULL,
  `Nombre_producto` VARCHAR(45) NULL,
  `Tipo_producto` VARCHAR(45) NULL,
  `Descripcion` VARCHAR(45) NULL,
  `Precio` VARCHAR(45) NULL,
  `existencia` INT NULL,
  PRIMARY KEY (`id_produto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sensualite`.`Productos_has_Compras`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sensualite`.`Productos_has_Compras` (
  `Productos_id_produto` INT NOT NULL,
  `Compras_idCompra` INT NOT NULL,
  `Compras_Usuarios_idUsuario` INT NOT NULL,
  PRIMARY KEY (`Productos_id_produto`, `Compras_idCompra`, `Compras_Usuarios_idUsuario`),
  INDEX `fk_Productos_has_Compras_Compras1_idx` (`Compras_idCompra` ASC, `Compras_Usuarios_idUsuario` ASC) VISIBLE,
  INDEX `fk_Productos_has_Compras_Productos1_idx` (`Productos_id_produto` ASC) VISIBLE,
  CONSTRAINT `fk_Productos_has_Compras_Productos1`
    FOREIGN KEY (`Productos_id_produto`)
    REFERENCES `sensualite`.`Productos` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Productos_has_Compras_Compras1`
    FOREIGN KEY (`Compras_idCompra` , `Compras_Usuarios_idUsuario`)
    REFERENCES `sensualite`.`Compras` (`idCompra` , `Usuarios_idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
